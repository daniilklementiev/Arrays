Переход к объектам:
Статические методы "нагружают" стек. Их использование рекомендуется только по необходимости.
Одна из таких необходимостей - начальный запуск приложения. 
Всё что может быть запущено, принадлежит объектам или является статическим.
Традиционно, в статическом Main() производится лишь создание первого объекта и перехол к его методам. 

Program {                    |           App {
    static Main() {          |               void Run() {
        new App().Run();     |                   Работа с динамическими объектами
    }                        |               }
}                            |           }
--------------------------------------------------------------
Разделение кода одного класса на несколько файлов
File1.cs                     |           File2.cs
partial class App {          |           partial class App {
    data1;                   |               data2
}                            |           }
--------------------------------------------------------------
Нужно указать partial class в каждом из файлов

Свойства (в C#)
Свойства - синтаксический сахар, скрывающий работу геттеров и сеттеров за операцией присваивания:
obj.x = 10 ==> obj.setX(10);

Автосвойство - с классическим поведением аксессоров

Коллекции (Generics)
Самостоятельно: обзор существующих коллекций
Реально, в основном, используют две из них:
List<T> - "эластичный" массив - аналог std::vector
Dictionary<T,T> - аналог std::map, ассоциативный массив, ключ-значение  